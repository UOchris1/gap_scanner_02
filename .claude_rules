# PERSISTENT RULES FOR CLAUDE CODE - INJECTED WITH EVERY COMMAND

## MANDATORY BEHAVIORAL CONTROLS
1. FILE ORGANIZATION RULES:
   - NEVER create test_*.py in root directory
   - ALL test outputs go to project_state/artifacts/
   - ALL validation scripts go to scripts/ folder
   - NO files in gap_scanner_01_drive_share/ except for GPT consultation
   - NO duplicate functionality files
   - If file exists, FIX IT, don't create new one

2. TROUBLESHOOTING RULES:
   - If error occurs: DEBUG the existing script
   - DO NOT create workaround script
   - DO NOT switch to fake/mock data
   - FIX the actual problem
   - Maximum 3 attempts before requesting help

3. HELP REQUEST PROTOCOL:
   - After 3 failed attempts, STOP
   - Create: project_state/HELP_REQUEST.md
   - Include: Error details, attempts made, specific question
   - Print: "EXTERNAL HELP NEEDED - See HELP_REQUEST.md"
   - WAIT for response before continuing

## ENCODING RULES
- MUST use ASCII only - no unicode characters (no emojis, no smart quotes, no em-dashes)
- Replace: -- with --, " with ", ' with ', ... with ...
- All file writes must specify encoding='ascii', errors='replace'

## TASKMASTER INTEGRATION
- USE TodoWrite tool for ALL tasks and subtasks
- CONSTANTLY refer to and update task list
- NEVER work without active task tracking
- Mark tasks in_progress BEFORE starting work
- Mark tasks completed IMMEDIATELY after finishing
- Break complex work into tracked subtasks
- START every task with: Create Taskmaster task list via TodoWrite tool
- UPDATE task status after each subtask completion
- CHECK task list before proceeding to next phase
- NO diagnostic files - use TodoWrite to track debugging progress

## PRD REFERENCE
- READ master PRD at: ./docs/MASTER_PRD.md before ANY code changes
- VERIFY changes align with PRD specifications
- LOG deviations in ./project_state/prd_deviations.log

## PROJECT STATE
- CHECK ./project_state/current_state.json at session start
- UPDATE state after each significant change
- WRITE decisions to ./project_state/task_log.md

## COMMAND PREFIX
Every Python file must start with:
# -*- coding: ascii -*-
# ASCII-only output enforced

## THETADATA INTEGRATION RULES
- Primary: ThetaData v3 (port 25503, param="symbol")
- Fallback: ThetaData v1.8.6 (port 25510, param="root")
- Secondary: Polygon API fallback
- Concurrency: Use semaphore limiting (4 outstanding requests)
- Error handling: Handle codes 429, 570, 571, 474

## GAP SCANNER SPECIFIC RULES
R1 Premarket mover: ((premarket_high / prev_close) - 1) * 100 >= 50.0
R2 Open gap:        ((open / prev_close) - 1) * 100 >= 50.0
R3 Intraday push:   ((high / open) - 1) * 100 >= 50.0
R4 7-day surge:     ((highest_high_7d / lowest_low_7d) - 1) * 100 >= 300.0

## REVERSE SPLIT GATE
- Window: 1 trading day (configurable to 2)
- Keep if: dollar_volume >= 10,000,000 AND intraday_push_pct >= 50.0
- Otherwise: mark split_artifact and suppress OPEN_GAP_50-only artifacts